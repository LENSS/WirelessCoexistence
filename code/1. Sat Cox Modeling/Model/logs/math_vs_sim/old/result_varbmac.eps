%!PS-Adobe-2.0 EPSF-2.0
%%Title: result_varbmac.eps
%%Creator: gnuplot 4.4 patchlevel 4
%%CreationDate: Mon Jul 23 15:13:39 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (result_varbmac.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 4)
  /Author (wei zhang)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jul 23 15:13:39 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1176 768 M
63 0 V
stroke
1032 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
1176 1166 M
63 0 V
stroke
1032 1166 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.1)]
] -80.0 MRshow
1.000 UL
LTb
1176 1565 M
63 0 V
stroke
1032 1565 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.2)]
] -80.0 MRshow
1.000 UL
LTb
1176 1963 M
63 0 V
stroke
1032 1963 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.3)]
] -80.0 MRshow
1.000 UL
LTb
1176 2361 M
63 0 V
stroke
1032 2361 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.4)]
] -80.0 MRshow
1.000 UL
LTb
1176 2760 M
63 0 V
stroke
1032 2760 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.5)]
] -80.0 MRshow
1.000 UL
LTb
1176 3158 M
63 0 V
stroke
1032 3158 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.6)]
] -80.0 MRshow
1.000 UL
LTb
1176 3556 M
63 0 V
stroke
1032 3556 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.7)]
] -80.0 MRshow
1.000 UL
LTb
1176 3954 M
63 0 V
stroke
1032 3954 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.8)]
] -80.0 MRshow
1.000 UL
LTb
1176 4353 M
63 0 V
stroke
1032 4353 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.9)]
] -80.0 MRshow
1.000 UL
LTb
1176 4751 M
63 0 V
stroke
1032 4751 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1)]
] -80.0 MRshow
1.000 UL
LTb
1176 768 M
0 63 V
0 3920 R
0 -63 V
stroke
1176 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
1924 768 M
0 63 V
0 3920 R
0 -63 V
stroke
1924 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 10)]
] -80.0 MCshow
1.000 UL
LTb
2672 768 M
0 63 V
0 3920 R
0 -63 V
stroke
2672 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 20)]
] -80.0 MCshow
1.000 UL
LTb
3419 768 M
0 63 V
0 3920 R
0 -63 V
stroke
3419 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 30)]
] -80.0 MCshow
1.000 UL
LTb
4167 768 M
0 63 V
0 3920 R
0 -63 V
stroke
4167 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 40)]
] -80.0 MCshow
1.000 UL
LTb
4915 768 M
0 63 V
0 3920 R
0 -63 V
stroke
4915 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 50)]
] -80.0 MCshow
1.000 UL
LTb
5663 768 M
0 63 V
0 3920 R
0 -63 V
stroke
5663 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 60)]
] -80.0 MCshow
1.000 UL
LTb
5663 768 M
-63 0 V
stroke
5807 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MLshow
1.000 UL
LTb
5663 1166 M
-63 0 V
stroke
5807 1166 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.1)]
] -80.0 MLshow
1.000 UL
LTb
5663 1565 M
-63 0 V
stroke
5807 1565 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.2)]
] -80.0 MLshow
1.000 UL
LTb
5663 1963 M
-63 0 V
stroke
5807 1963 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.3)]
] -80.0 MLshow
1.000 UL
LTb
5663 2361 M
-63 0 V
stroke
5807 2361 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.4)]
] -80.0 MLshow
1.000 UL
LTb
5663 2760 M
-63 0 V
stroke
5807 2760 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.5)]
] -80.0 MLshow
1.000 UL
LTb
5663 3158 M
-63 0 V
stroke
5807 3158 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.6)]
] -80.0 MLshow
1.000 UL
LTb
5663 3556 M
-63 0 V
stroke
5807 3556 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.7)]
] -80.0 MLshow
1.000 UL
LTb
5663 3954 M
-63 0 V
stroke
5807 3954 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.8)]
] -80.0 MLshow
1.000 UL
LTb
5663 4353 M
-63 0 V
stroke
5807 4353 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.9)]
] -80.0 MLshow
1.000 UL
LTb
5663 4751 M
-63 0 V
stroke
5807 4751 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1)]
] -80.0 MLshow
1.000 UL
LTb
1.000 UL
LTb
1176 4751 N
0 -3983 V
4487 0 V
0 3983 V
-4487 0 V
Z stroke
LCb setrgbcolor
192 2759 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (802.11 Throughput \(Mbps\))]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
6646 2759 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (BoX-MAC Throughput \(Kbps\))]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
3707 168 M
[ [(Helvetica) 240.0 0.0 true true 0 (Number of experiments)]
] -80.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
4.000 UL
LT0
LCb setrgbcolor
4592 4568 M
[ [(Helvetica) 240.0 0.0 true true 0 (IEEE 802.11)]
] -80.0 MRshow
LT0
4736 4568 M
639 0 V
1176 1998 M
75 -4 V
75 -3 V
74 -4 V
75 -72 V
75 -5 V
75 -4 V
74 -5 V
75 -104 V
75 -5 V
75 -6 V
75 -6 V
74 273 V
75 -4 V
75 -4 V
75 -4 V
75 -69 V
74 -5 V
75 -5 V
75 -5 V
75 -100 V
74 -7 V
75 -6 V
75 -6 V
75 281 V
75 -4 V
74 -4 V
75 -4 V
75 -65 V
75 -5 V
74 -5 V
75 -5 V
75 -96 V
75 -7 V
75 -6 V
74 -7 V
75 283 V
75 -4 V
75 -4 V
75 -4 V
74 -59 V
75 -5 V
75 -5 V
75 -5 V
74 -89 V
75 -7 V
75 -7 V
75 -8 V
75 287 V
74 -3 V
75 -4 V
75 -3 V
75 -51 V
75 -5 V
74 -5 V
75 -5 V
75 -78 V
75 -7 V
74 -7 V
75 -7 V
1176 1998 Pls
1251 1994 Pls
1326 1991 Pls
1400 1987 Pls
1475 1915 Pls
1550 1910 Pls
1625 1906 Pls
1699 1901 Pls
1774 1797 Pls
1849 1792 Pls
1924 1786 Pls
1999 1780 Pls
2073 2053 Pls
2148 2049 Pls
2223 2045 Pls
2298 2041 Pls
2373 1972 Pls
2447 1967 Pls
2522 1962 Pls
2597 1957 Pls
2672 1857 Pls
2746 1850 Pls
2821 1844 Pls
2896 1838 Pls
2971 2119 Pls
3046 2115 Pls
3120 2111 Pls
3195 2107 Pls
3270 2042 Pls
3345 2037 Pls
3419 2032 Pls
3494 2027 Pls
3569 1931 Pls
3644 1924 Pls
3719 1918 Pls
3793 1911 Pls
3868 2194 Pls
3943 2190 Pls
4018 2186 Pls
4093 2182 Pls
4167 2123 Pls
4242 2118 Pls
4317 2113 Pls
4392 2108 Pls
4466 2019 Pls
4541 2012 Pls
4616 2005 Pls
4691 1997 Pls
4766 2284 Pls
4840 2281 Pls
4915 2277 Pls
4990 2274 Pls
5065 2223 Pls
5140 2218 Pls
5214 2213 Pls
5289 2208 Pls
5364 2130 Pls
5439 2123 Pls
5513 2116 Pls
5588 2109 Pls
5055 4568 Pls
% End plot #1
% Begin plot #2
1.000 UP
4.000 UL
LT0
LCb setrgbcolor
4592 4328 M
[ [(Helvetica) 240.0 0.0 true true 0 (BoX-MAC)]
] -80.0 MRshow
LT0
4736 4328 M
639 0 V
1176 897 M
75 1 V
75 0 V
74 1 V
75 15 V
75 1 V
75 1 V
74 1 V
75 22 V
75 1 V
75 1 V
75 1 V
74 -56 V
75 0 V
75 1 V
75 1 V
75 14 V
74 1 V
75 1 V
75 1 V
75 21 V
74 2 V
75 1 V
75 1 V
75 -58 V
75 1 V
74 1 V
75 0 V
75 14 V
75 1 V
74 1 V
75 1 V
75 20 V
75 1 V
75 2 V
74 1 V
75 -58 V
75 0 V
75 1 V
75 1 V
74 12 V
75 1 V
75 1 V
75 1 V
74 19 V
75 1 V
75 2 V
75 1 V
75 -59 V
74 1 V
75 1 V
75 1 V
75 10 V
75 1 V
74 1 V
75 1 V
75 16 V
75 1 V
74 2 V
75 1 V
1176 897 Pls
1251 898 Pls
1326 898 Pls
1400 899 Pls
1475 914 Pls
1550 915 Pls
1625 916 Pls
1699 917 Pls
1774 939 Pls
1849 940 Pls
1924 941 Pls
1999 942 Pls
2073 886 Pls
2148 886 Pls
2223 887 Pls
2298 888 Pls
2373 902 Pls
2447 903 Pls
2522 904 Pls
2597 905 Pls
2672 926 Pls
2746 928 Pls
2821 929 Pls
2896 930 Pls
2971 872 Pls
3046 873 Pls
3120 874 Pls
3195 874 Pls
3270 888 Pls
3345 889 Pls
3419 890 Pls
3494 891 Pls
3569 911 Pls
3644 912 Pls
3719 914 Pls
3793 915 Pls
3868 857 Pls
3943 857 Pls
4018 858 Pls
4093 859 Pls
4167 871 Pls
4242 872 Pls
4317 873 Pls
4392 874 Pls
4466 893 Pls
4541 894 Pls
4616 896 Pls
4691 897 Pls
4766 838 Pls
4840 839 Pls
4915 840 Pls
4990 841 Pls
5065 851 Pls
5140 852 Pls
5214 853 Pls
5289 854 Pls
5364 870 Pls
5439 871 Pls
5513 873 Pls
5588 874 Pls
5055 4328 Pls
% End plot #2
1.000 UL
LTb
1176 4751 N
0 -3983 V
4487 0 V
0 3983 V
-4487 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
